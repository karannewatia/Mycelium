execfile('/root/SCALE-MAMBA/Programs/lwe/lwe.mpc')
#from Compiler import mpc_math   #uncomment for testing laplace noise gen/rounding for BFV

#p = 3608870760655701536654448303084521404059979435669688520664454167677047564331360806878098945169255539464747077653151390316596266506041127794233364507011499768902844417

w = cint(1032221733394210440441659515349146050267235537140279868931207933950081697226615027346242970871325134062515859878795671410046065213016222308552291565188475284037534470)

lgN = 15 #polynomial degree
n = 32768 #polynomial degree
N = 1 #used in binomial distribution
lgM = 30 #plaintext modulus bitsize
l = 12 #plaintext length (number of elements)
lgP = 550 #ciphertext modulus bitsize

r = Ring(lgN, w)
lwe = LWE(r, N, lgM, l, n, lgP)

############ Set up the secret key  ########################

s = lwe.secret_key_gen()

#set up the shares of the secret key
for i in range(n):
  output_shares(0, s[i])
