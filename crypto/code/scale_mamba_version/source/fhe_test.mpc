execfile('/root/SCALE-MAMBA/Programs/lwe/lwe.mpc')
#from Compiler import mpc_math   #uncomment for testing laplace noise gen/rounding for BFV

#p = 12413837415352346609
w = cint(11667162701519046670)

lgN = 2 #polynomial degree
n = 4 #polynomial degree
N = 1 #used in binomial distribution
lgM = 3 #plaintext modulus bitsize
l = 4 #plaintext length (number of elements)
lgP = 64 #ciphertext modulus bitsize

r = Ring(lgN, w)
lwe = LWE(r, N, lgM, l, n, lgP)

##################### Test key gen + decrypt in MPC ########################

#create a plaintext
x = sint.Array(l)
for i in range(l):
  x[i] = sint(i)
  print_ln("Plaintext is %s ", x[i].reveal())

#(b,a) is the public key, s is the secret key
[b, a, s] = lwe.key_gen()

#encrypt the plaintext with the public key; (v,u) is the resulting ciphertext
[v,u] = lwe.enc(b, a, x)

#decrypt the ciphertext with the secret key
x2 = lwe.dec(v, u, s)

#reveal the decryption to each player
for i in range(l):
  x2[i].reveal_to(0)
  print_ln("Decrypted text is %s ", x2[i].reveal())
