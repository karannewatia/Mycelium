import "hashes/sha256/512bit" as sha256
// import "hashes/mimc7/mimc7R90" as mimc

// Encrypt local value into a ciphertext [u,v] and ensure its properly constructed
def main(private field[32768] z, private field[32768] a, private field[32768] b, private field[32768] u, private field[32768] v) -> field:

  field m = 2**30 // plaintext modulus

  field[32768] e0 = [1 ; 32768]
  field[32768] e1 = [2 ; 32768]
  field[32768] e2 = [2 ; 32768]

  u32[16] hashMe = [0x00000001; 16]
  u32[8] h = sha256(hashMe[0..8], hashMe[8..16]) // Just to test hash

  for u32 i in 0..32768 do
    assert(v[i]  == b[i]*e0[i] + m*e2[i] + z[i])
    assert(u[i] == a[i]*e0[i] + m*e1[i])
  endfor

  return u[0] 
 //return sha256(u) // for now to make sure we can return a hash

