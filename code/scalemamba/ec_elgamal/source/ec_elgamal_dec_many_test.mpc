execfile('/root/SCALE-MAMBA/Programs/ec_elgamal/ec_elgamal.mpc')

N_PLAYERS = SED_THIS_TO_NUMBER_OF_PLAYERS
len = SED_THIS_TO_PLAINTEXT_LEN
N_REPEATS = SED_THIS_TO_N_REPEATS

g = cint.Array(3)
g[0] = cint(76049884773772239630286819839663813044215220798366048289168112050194373987235)
g[1] = cint(111998029357810440620223172064231485820163014246983600027697176972731586228871)
g[2] = cint(0)


print_ln("Benchmarking cost of decryption...")

# Hard-coded ciphertexts.
# Chosen for r=2^100, M = 3*g, sk=2^256-1 
c0 = cint.Array(3)
c0[0] = cint(115657874482546486927762028809108691345545211268603463023901423738980745390439)
c0[1] = cint(3656938664490060334393307656542316098216984163650110512501936228370411654622)
c0[2] = cint(0)
 
c1 = cint.Array(3)
c1[0] = cint(41363103313925522323832832369641685371987220696270837171894500342536496289108)
c1[1] = cint(79780624830710345948823710190412138652320401845300038979600688206177778058067)
c1[2] = cint(0)

# Hard-coded secret-key.
sk = sint.Array(256)
for i in range(256):
  sk[i] = sint(1)

for i in range(N_REPEATS):
  M = dec([c0, c1], sk) 

  print_ln("M = [%s, %s, %s]", M[0].reveal(), M[1].reveal(), M[2].reveal())

  m, allIsGood = unembedBSGSLocal(g, M, len, N_PLAYERS)
  print_ln("m = %s", m.reveal()) 
