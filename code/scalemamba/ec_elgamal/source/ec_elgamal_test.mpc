execfile('/root/SCALE-MAMBA/Programs/ec_elgamal/ec_elgamal.mpc')

testi=0

g = cint.Array(3)
g[0] = cint(76049884773772239630286819839663813044215220798366048289168112050194373987235)
g[1] = cint(111998029357810440620223172064231485820163014246983600027697176972731586228871)
g[2] = cint(0)

# MAMBA doesn't have a way to learn the number of players or the threshold
# Need to use sed to replaced these before compilation. 
# This hack allows the program to access these. 
N=SED_THIS_TO_NUMBER_OF_PLAYERS
t=SED_THIS_TO_THRESHOLD

if(True):
  print_ln("----------------------------------------")
  print_ln("Test %s: Int to Array conversion", testi)
  testi = testi + 1

  m = sint(11)
  mArr = int2Arr(m, 4)

  print_ln("Expect: [1, 1, 0, 1]")
  print_ln("Actual: [%s, %s, %s, %s]", mArr[0].reveal(), mArr[1].reveal(), 
     mArr[2].reveal(), mArr[3].reveal())

if(True):
  print_ln("----------------------------------------")
  print_ln("Test %s: enc, dec", testi)
  testi = testi + 1
  
  [pk, sk] = keygen(g)

  print_ln("PK = [%s, %s, %s]", pk[0], pk[1], pk[2])

  MOrig = embed(g, sint(2), 2)
  c = enc(g, pk, MOrig)

  MFinal = dec(c, sk)

  h = addClear(g, g)
  print_ln("Expect: [%s, %s, %s]", h[0].reveal(), h[1].reveal(), h[2].reveal())
  print_ln("Actual: [%s, %s, %s]", MFinal[0].reveal(), MFinal[1].reveal(), MFinal[2].reveal())


if(True):
  print_ln("----------------------------------------")
  print_ln("Test %s: enc-add-dec", testi)
  testi = testi + 1
  
  [pk, sk] = keygen(g)

  M0 = embed(g, sint(2), 2)
  c0 = enc(g, pk, M0)
  
  M1 = embed(g, sint(6), 3)
  c1 = enc(g, pk, M1)

  cTot0 = addClear(c0[0], c1[0])
  cTot1 = addClear(c0[1], c1[1])

  MTot = dec([cTot0, cTot1], sk)

  h = embed(g, sint(8), 4)
  print_ln("Expect: [%s, %s, %s]", h[0].reveal(), h[1].reveal(), h[2].reveal())
  print_ln("Actual: [%s, %s, %s]", MTot[0].reveal(), MTot[1].reveal(), MTot[2].reveal())

if(True):
  print_ln("----------------------------------------")
  print_ln("Test %s: embed", testi)
  testi = testi + 1
  
  M = embed(g, sint(2), 2)

  h = addClear(g, g)

  print_ln("Expect: [%s, %s, %s]", h[0].reveal(), h[1].reveal(), h[2].reveal()) 
  print_ln("Actual: [%s, %s, %s]", M[0].reveal(), M[1].reveal(), M[2].reveal())

if(True):
  print_ln("----------------------------------------")
  print_ln("Test %s: embed, unembed", testi)
  testi = testi + 1
 
  morig = cint(13)
 
  M = embed(g, sint(morig), 6)

  m = unembedBSGS(g, M, 3)

  print_ln("Expect: %s", morig)
  print_ln("Actual: %s", m.reveal())
